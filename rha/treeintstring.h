// Template generated by maketempl from file ../../include/ctmpl/tree.tmpl
//
// maketempl has been written by Mikio Braun, 2005
// mikio@first.fraunhofer.de
//

#ifndef TREEINTSTRING
#define TREEINTSTRING

#include "alloc.h"
#include "intdefs.h"
#include "stringdefs.h"

#line 18 "../../include/ctmpl/tree.tmpl"
#include <stdbool.h>
#include <stdio.h>
#include <string.h>


struct treeintstring_treenode {
  enum {treeintstring_RED, treeintstring_BLACK} color;
  int key;
  string_t value;
  struct treeintstring_treenode *left;
  struct treeintstring_treenode *right;
  struct treeintstring_treenode *p;      // parent
};


typedef struct treeintstring_ {
  struct treeintstring_treenode *root;
  int size;
} treeintstring_t;

struct treeintstring_iterstack {
  enum {treeintstring_LEFT, treeintstring_RIGHT} state;
  struct treeintstring_iterstack *prev;
};

typedef struct {
  struct treeintstring_treenode *c;
  struct treeintstring_iterstack *hist;
} treeintstring_iterator_t;

extern int treeintstring_lastsearchdepth;

extern void treeintstring_init(treeintstring_t *t);
// creates the empty tree

extern void treeintstring_print(treeintstring_t *t);
// prints the t in order

extern void treeintstring_clear(treeintstring_t *t);
// clears t

extern bool treeintstring_isempty(treeintstring_t *t);
// is the tree empty?

extern int treeintstring_size(treeintstring_t *t);
// size of the tree

extern string_t treeintstring_search(treeintstring_t *x, int key);
// finds the key in x and return its value
// or NULL if not found (e.g. if x is empty)
// note that also value might be NULL

extern void treeintstring_insert(treeintstring_t *t, int key, string_t value);
// inserts (key,value) into t

extern string_t treeintstring_delete(treeintstring_t *t, int key);
// deletes key in t and returns its value

// Iterating
extern void treeintstring_begin(treeintstring_iterator_t *i, treeintstring_t *t);
extern bool treeintstring_done(treeintstring_iterator_t *i);
extern void treeintstring_next(treeintstring_iterator_t *i);
extern int treeintstring_get_key(treeintstring_iterator_t *i);
extern string_t treeintstring_get_value(treeintstring_iterator_t *i);


#endif
