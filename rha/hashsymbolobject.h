// Template generated by maketempl from file ../../include/ctmpl/hash.tmpl
//
// maketempl has been written by Mikio Braun, 2005
// mikio@first.fraunhofer.de
//

#ifndef HASHSYMBOLOBJECT
#define HASHSYMBOLOBJECT

#include "alloc.h"
#include "object.h"
#include "symbol_tr.h"

#line 12 "../../include/ctmpl/hash.tmpl"

#include <stdbool.h>

struct hashsymbolobject_hashnode
{
  struct hashsymbolobject_hashnode *next;
  symbol_tr key;
  object_t val;
};

struct hashsymbolobject_iterator
{
  struct hashsymbolobject_hash *hash;
  int cnt;
  struct hashsymbolobject_hashnode *node;
  bool done;
};

struct hashsymbolobject_hash
{
  int len;
  int numbins;
  struct hashsymbolobject_hashnode **table;
};

typedef struct hashsymbolobject_hash hashsymbolobject_t;
typedef struct hashsymbolobject_hashnode hashsymbolobject_hashnode_t;
typedef struct hashsymbolobject_iterator hashsymbolobject_iterator_t;
typedef void hashsymbolobject_valueproc_t(object_t);
typedef void hashsymbolobject_keyproc_t(symbol_tr);

extern void hashsymbolobject_init(hashsymbolobject_t *h);
extern void hashsymbolobject_clear(hashsymbolobject_t *h);
extern object_t hashsymbolobject_lookup(hashsymbolobject_t *h, symbol_tr k);
extern void hashsymbolobject_assign(hashsymbolobject_t *h, symbol_tr k, object_t v);
extern void hashsymbolobject_dump(hashsymbolobject_t *h, hashsymbolobject_keyproc_t (*kp), hashsymbolobject_valueproc_t (*vp) );

extern void hashsymbolobject_begin(hashsymbolobject_iterator_t *t, hashsymbolobject_t *h);
extern bool hashsymbolobject_done(hashsymbolobject_iterator_t *t);
extern void hashsymbolobject_next(hashsymbolobject_iterator_t *t);
extern symbol_tr hashsymbolobject_get_key(hashsymbolobject_iterator_t *t);
extern object_t hashsymbolobject_get_value(hashsymbolobject_iterator_t *t);


#endif
