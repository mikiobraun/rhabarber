

Terminals which are not used:

   FN
   THIS
   THAT
   PARENT
   VOID
   BS
   WSL
   IMPORT
   TRY
   CATCH
   WHILE
   FOR
   IF
   ELSE
   RETURN
   BREAK
   DELIVER
   THROW
   ASSIGN
   PLUSASSIGN
   MINUSASSIGN
   TIMESASSIGN
   DIVIDEASSIGN
   SNATCH
   SYMASSIGN
   MAPS
   NOT
   AND
   OR
   LESS
   LESSEQUAL
   GREATER
   GREATEREQUAL
   EQUAL
   NOTEQUAL
   PLUS
   MINUS
   TIMES
   DIVIDE
   PLUSPLUS
   MINUSMINUS
   PRE
   NEG
   DOT
   QUEST
   NOBINDDOT



Grammar
rule 1    prog -> semiclist
rule 2    prog ->		/* empty */
rule 3    semiclist -> expr
rule 4    semiclist -> semiclist SEMIC expr
rule 5    semiclist -> semiclist SEMIC
rule 6    expr -> wslist
rule 7    wslist -> term
rule 8    wslist -> wslist term
rule 9    term -> INT
rule 10   term -> BOOL
rule 11   term -> REAL
rule 12   term -> STRING
rule 13   term -> SYMBOL
rule 14   term -> LRP expr RRP
rule 15   term -> LRP RRP
rule 16   term -> LRP expr COMMA RRP
rule 17   term -> LRP commalist RRP
rule 18   term -> LSP RSP
rule 19   term -> LSP litlist RSP
rule 20   term -> LCP RCP
rule 21   term -> LCP semiclist RCP
rule 22   term -> error
rule 23   commalist -> expr COMMA expr
rule 24   commalist -> commalist COMMA expr
rule 25   litsep -> COLON
rule 26   litsep -> COMMA
rule 27   litsep -> SEMIC
rule 28   litsep -> ENTAILS
rule 29   litlist -> expr
rule 30   litlist -> litlist litsep expr

Terminals, with rules where they appear

$ (-1)
error (256) 22
LRP (257) 14 15 16 17
RRP (258) 14 15 16 17
SYMBOL (259) 13
STRING (260) 12
INT (261) 9
REAL (262) 11
BOOL (263) 10
FN (264)
THIS (265)
THAT (266)
PARENT (267)
VOID (268)
BS (269)
WSL (270)
LSP (271) 18 19
RSP (272) 18 19
SEMIC (273) 4 5 27
IMPORT (274)
TRY (275)
CATCH (276)
WHILE (277)
FOR (278)
IF (279)
ELSE (280)
RETURN (281)
BREAK (282)
DELIVER (283)
THROW (284)
ENTAILS (285) 28
COMMA (286) 16 23 24 26
ASSIGN (287)
PLUSASSIGN (288)
MINUSASSIGN (289)
TIMESASSIGN (290)
DIVIDEASSIGN (291)
SNATCH (292)
SYMASSIGN (293)
COLON (294) 25
MAPS (295)
NOT (296)
AND (297)
OR (298)
LESS (299)
LESSEQUAL (300)
GREATER (301)
GREATEREQUAL (302)
EQUAL (303)
NOTEQUAL (304)
PLUS (305)
MINUS (306)
TIMES (307)
DIVIDE (308)
PLUSPLUS (309)
MINUSMINUS (310)
PRE (311)
NEG (312)
DOT (313)
QUEST (314)
NOBINDDOT (315)
LCP (316) 20 21
RCP (317) 20 21

Nonterminals, with rules where they appear

prog (64)
    on left: 1 2
semiclist (65)
    on left: 3 4 5, on right: 1 4 5 21
expr (66)
    on left: 6, on right: 3 4 14 16 23 24 29 30
wslist (67)
    on left: 7 8, on right: 6 8
term (68)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20 21 22,
    on right: 7 8
commalist (69)
    on left: 23 24, on right: 17 24
litsep (70)
    on left: 25 26 27 28, on right: 30
litlist (71)
    on left: 29 30, on right: 19 30


state 0

    error	shift, and go to state 1
    LRP 	shift, and go to state 2
    SYMBOL	shift, and go to state 3
    STRING	shift, and go to state 4
    INT 	shift, and go to state 5
    REAL	shift, and go to state 6
    BOOL	shift, and go to state 7
    LSP 	shift, and go to state 8
    LCP 	shift, and go to state 9

    $   	reduce using rule 2 (prog)

    prog	go to state 40
    semiclist	go to state 10
    expr	go to state 11
    wslist	go to state 12
    term	go to state 13



state 1

    term  ->  error .   (rule 22)

    $default	reduce using rule 22 (term)



state 2

    term  ->  LRP . expr RRP   (rule 14)
    term  ->  LRP . RRP   (rule 15)
    term  ->  LRP . expr COMMA RRP   (rule 16)
    term  ->  LRP . commalist RRP   (rule 17)

    error	shift, and go to state 1
    LRP 	shift, and go to state 2
    RRP 	shift, and go to state 14
    SYMBOL	shift, and go to state 3
    STRING	shift, and go to state 4
    INT 	shift, and go to state 5
    REAL	shift, and go to state 6
    BOOL	shift, and go to state 7
    LSP 	shift, and go to state 8
    LCP 	shift, and go to state 9

    expr	go to state 15
    wslist	go to state 12
    term	go to state 13
    commalist	go to state 16



state 3

    term  ->  SYMBOL .   (rule 13)

    $default	reduce using rule 13 (term)



state 4

    term  ->  STRING .   (rule 12)

    $default	reduce using rule 12 (term)



state 5

    term  ->  INT .   (rule 9)

    $default	reduce using rule 9 (term)



state 6

    term  ->  REAL .   (rule 11)

    $default	reduce using rule 11 (term)



state 7

    term  ->  BOOL .   (rule 10)

    $default	reduce using rule 10 (term)



state 8

    term  ->  LSP . RSP   (rule 18)
    term  ->  LSP . litlist RSP   (rule 19)

    error	shift, and go to state 1
    LRP 	shift, and go to state 2
    SYMBOL	shift, and go to state 3
    STRING	shift, and go to state 4
    INT 	shift, and go to state 5
    REAL	shift, and go to state 6
    BOOL	shift, and go to state 7
    LSP 	shift, and go to state 8
    RSP 	shift, and go to state 17
    LCP 	shift, and go to state 9

    expr	go to state 18
    wslist	go to state 12
    term	go to state 13
    litlist	go to state 19



state 9

    term  ->  LCP . RCP   (rule 20)
    term  ->  LCP . semiclist RCP   (rule 21)

    error	shift, and go to state 1
    LRP 	shift, and go to state 2
    SYMBOL	shift, and go to state 3
    STRING	shift, and go to state 4
    INT 	shift, and go to state 5
    REAL	shift, and go to state 6
    BOOL	shift, and go to state 7
    LSP 	shift, and go to state 8
    LCP 	shift, and go to state 9
    RCP 	shift, and go to state 20

    semiclist	go to state 21
    expr	go to state 11
    wslist	go to state 12
    term	go to state 13



state 10

    prog  ->  semiclist .   (rule 1)
    semiclist  ->  semiclist . SEMIC expr   (rule 4)
    semiclist  ->  semiclist . SEMIC   (rule 5)

    SEMIC	shift, and go to state 22

    $default	reduce using rule 1 (prog)



state 11

    semiclist  ->  expr .   (rule 3)

    $default	reduce using rule 3 (semiclist)



state 12

    expr  ->  wslist .   (rule 6)
    wslist  ->  wslist . term   (rule 8)

    error	shift, and go to state 1
    LRP 	shift, and go to state 2
    SYMBOL	shift, and go to state 3
    STRING	shift, and go to state 4
    INT 	shift, and go to state 5
    REAL	shift, and go to state 6
    BOOL	shift, and go to state 7
    LSP 	shift, and go to state 8
    LCP 	shift, and go to state 9

    $   	reduce using rule 6 (expr)
    RRP 	reduce using rule 6 (expr)
    RSP 	reduce using rule 6 (expr)
    SEMIC	reduce using rule 6 (expr)
    ENTAILS	reduce using rule 6 (expr)
    COMMA	reduce using rule 6 (expr)
    COLON	reduce using rule 6 (expr)
    RCP 	reduce using rule 6 (expr)

    term	go to state 23



state 13

    wslist  ->  term .   (rule 7)

    $default	reduce using rule 7 (wslist)



state 14

    term  ->  LRP RRP .   (rule 15)

    $default	reduce using rule 15 (term)



state 15

    term  ->  LRP expr . RRP   (rule 14)
    term  ->  LRP expr . COMMA RRP   (rule 16)
    commalist  ->  expr . COMMA expr   (rule 23)

    RRP 	shift, and go to state 24
    COMMA	shift, and go to state 25



state 16

    term  ->  LRP commalist . RRP   (rule 17)
    commalist  ->  commalist . COMMA expr   (rule 24)

    RRP 	shift, and go to state 26
    COMMA	shift, and go to state 27



state 17

    term  ->  LSP RSP .   (rule 18)

    $default	reduce using rule 18 (term)



state 18

    litlist  ->  expr .   (rule 29)

    $default	reduce using rule 29 (litlist)



state 19

    term  ->  LSP litlist . RSP   (rule 19)
    litlist  ->  litlist . litsep expr   (rule 30)

    RSP 	shift, and go to state 28
    SEMIC	shift, and go to state 29
    ENTAILS	shift, and go to state 30
    COMMA	shift, and go to state 31
    COLON	shift, and go to state 32

    litsep	go to state 33



state 20

    term  ->  LCP RCP .   (rule 20)

    $default	reduce using rule 20 (term)



state 21

    semiclist  ->  semiclist . SEMIC expr   (rule 4)
    semiclist  ->  semiclist . SEMIC   (rule 5)
    term  ->  LCP semiclist . RCP   (rule 21)

    SEMIC	shift, and go to state 22
    RCP 	shift, and go to state 34



state 22

    semiclist  ->  semiclist SEMIC . expr   (rule 4)
    semiclist  ->  semiclist SEMIC .   (rule 5)

    error	shift, and go to state 1
    LRP 	shift, and go to state 2
    SYMBOL	shift, and go to state 3
    STRING	shift, and go to state 4
    INT 	shift, and go to state 5
    REAL	shift, and go to state 6
    BOOL	shift, and go to state 7
    LSP 	shift, and go to state 8
    LCP 	shift, and go to state 9

    $   	reduce using rule 5 (semiclist)
    SEMIC	reduce using rule 5 (semiclist)
    RCP 	reduce using rule 5 (semiclist)

    expr	go to state 35
    wslist	go to state 12
    term	go to state 13



state 23

    wslist  ->  wslist term .   (rule 8)

    $default	reduce using rule 8 (wslist)



state 24

    term  ->  LRP expr RRP .   (rule 14)

    $default	reduce using rule 14 (term)



state 25

    term  ->  LRP expr COMMA . RRP   (rule 16)
    commalist  ->  expr COMMA . expr   (rule 23)

    error	shift, and go to state 1
    LRP 	shift, and go to state 2
    RRP 	shift, and go to state 36
    SYMBOL	shift, and go to state 3
    STRING	shift, and go to state 4
    INT 	shift, and go to state 5
    REAL	shift, and go to state 6
    BOOL	shift, and go to state 7
    LSP 	shift, and go to state 8
    LCP 	shift, and go to state 9

    expr	go to state 37
    wslist	go to state 12
    term	go to state 13



state 26

    term  ->  LRP commalist RRP .   (rule 17)

    $default	reduce using rule 17 (term)



state 27

    commalist  ->  commalist COMMA . expr   (rule 24)

    error	shift, and go to state 1
    LRP 	shift, and go to state 2
    SYMBOL	shift, and go to state 3
    STRING	shift, and go to state 4
    INT 	shift, and go to state 5
    REAL	shift, and go to state 6
    BOOL	shift, and go to state 7
    LSP 	shift, and go to state 8
    LCP 	shift, and go to state 9

    expr	go to state 38
    wslist	go to state 12
    term	go to state 13



state 28

    term  ->  LSP litlist RSP .   (rule 19)

    $default	reduce using rule 19 (term)



state 29

    litsep  ->  SEMIC .   (rule 27)

    $default	reduce using rule 27 (litsep)



state 30

    litsep  ->  ENTAILS .   (rule 28)

    $default	reduce using rule 28 (litsep)



state 31

    litsep  ->  COMMA .   (rule 26)

    $default	reduce using rule 26 (litsep)



state 32

    litsep  ->  COLON .   (rule 25)

    $default	reduce using rule 25 (litsep)



state 33

    litlist  ->  litlist litsep . expr   (rule 30)

    error	shift, and go to state 1
    LRP 	shift, and go to state 2
    SYMBOL	shift, and go to state 3
    STRING	shift, and go to state 4
    INT 	shift, and go to state 5
    REAL	shift, and go to state 6
    BOOL	shift, and go to state 7
    LSP 	shift, and go to state 8
    LCP 	shift, and go to state 9

    expr	go to state 39
    wslist	go to state 12
    term	go to state 13



state 34

    term  ->  LCP semiclist RCP .   (rule 21)

    $default	reduce using rule 21 (term)



state 35

    semiclist  ->  semiclist SEMIC expr .   (rule 4)

    $default	reduce using rule 4 (semiclist)



state 36

    term  ->  LRP expr COMMA RRP .   (rule 16)

    $default	reduce using rule 16 (term)



state 37

    commalist  ->  expr COMMA expr .   (rule 23)

    $default	reduce using rule 23 (commalist)



state 38

    commalist  ->  commalist COMMA expr .   (rule 24)

    $default	reduce using rule 24 (commalist)



state 39

    litlist  ->  litlist litsep expr .   (rule 30)

    $default	reduce using rule 30 (litlist)



state 40

    $   	go to state 41



state 41

    $   	go to state 42



state 42

    $default	accept
