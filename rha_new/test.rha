// put all testing code here!

t = test("equalequal test");
t.check(17==17);
t.check("test"=="test");
t.check(void==void);
t.check(void!=15);
t.check("test"!=66);
t.check("test"!="tests");
t.summarize();


t = test("proxy tests");
a = 17;
b = proxy(\a);
t.check(a==b);
a = 42;
t.check(a==b);
a.xxx = "a new slot";
t.check(has(b, \xxx));
b.yyy = "another slot";
t.check(has(a, \yyy));
t.summarize();

t = test("arithmetic test");
t.check(17+42 == 59);
t.check(17-42 == -25);
t.check(17*42 == 714);
t.check(42/17 == 2);
t.summarize();

t = test("tuple test");
x = tuple.new(4);
t.check(x.len() == 4);
x.set(0, 42);
x.set(1, "seventeen");
t.check(x.get(0) == 42);
t.check(x.get(1) == "seventeen");
t.check(x.len() == 4);
t.summarize();

t = test("for loop test");
x = tuple.new(4);
x.set(0, 55);
x.set(1, 33);
x.set(2, 42);
x.set(3, -5);
y = 0;
for (i in x) y += i;
t.check(y==125);
t.summarize();

t = test("colon test");
x = tuple(5);
x.set(0, 5);
x.set(1, 6);
x.set(2, 7);
x.set(3, 8);
x.set(4, 9);
y = 5:10;
t.check(y.len() == 5);
for (i in 0:5)
  t.check(x.get(i) == y.get(i));
t.summarize();

t = test("list test");
l = list.new();
l.append(17);
l.append(42);
y = 111;
for (x in l) y += x;
t.check(y == 170);
t.summarize();

t = test("return test");
x = fn () { y = new(); y.a = 17; return y; z == zz }();
t.check(x.a == 17);
t.summarize();

t = test("deliver test");
x = { y = new(); y.a = 17; deliver y; z == zz };
t.check(x.a == 17);
t.summarize();

t = test("break test");
for (i in 0:5)
  if (i==2) break;
t.check(i == 2);
t.summarize();
