// WARNING: don't edit here!  
// This file has been automatically generated by 'rha_config.pl'.
// Instead edit 'rha_config.d'.

#ifndef DATATYPES_H
#define DATATYPES_H
#define rhabarber

// (1) datatypes which are available in Rhabarber
#include <stdbool.h>
typedef int rhabarber symbol_t;
typedef void rhabarber void_t;
typedef void* rhabarber object_t;
typedef struct { 
  int_t rettype;     // return type (currently not used)
  void *code;        // pointer to the code
  int_t narg;        // number of arguments
  int_t *argtypes[]; // array of the arg types
} rhabarber fn_t;
typedef bool rhabarber bool_t;
typedef int rhabarber int_t;
typedef double rhabarber real_t;
typedef double * rhabarber mat_t;



// (2) primtype id for all types
#define SYMBOL_T 1 
#define VOID_T 2 
#define OBJECT_T 3 
#define FN_T 4 
#define BOOL_T 5 
#define INT_T 6 
#define REAL_T 7 
#define MAT_T 8 


// (3) prototype objects for all types
extern object_t symbol_sym;
extern object_t void_sym;
extern object_t object_sym;
extern object_t fn_sym;
extern object_t bool_sym;
extern object_t int_sym;
extern object_t real_sym;
extern object_t mat_sym;


// (4) symbols


// (5) some useful macros
// get the raw data and convert
//
// for example, raw(int_t, o)
#define RAW(tp, o) ((tp*)(o->raw))
#define ASSERT_RAW_NONZERO(o) assert(raw(o) != 0)

#endif
