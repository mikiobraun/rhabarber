2007-08-22  Stefan Harmeling  <harmeli@dhcp-153-147.inf.ed.ac.uk>

	* prelude.rha (fn): besides 

	     t = tuple.new(4);

	we can now also magically say

	     t = tuple(4);

	since we made t a function by adding the relevant slots.

	* prules.c (prules_init): changed priority of quote ('\') to
	10.0.  Now it is equal to all freefix forms and all assignments.
	The reason is:

	     x = \peter              x = \(peter)
	     \x = peter              \(x=peter)

	We see that most prules must be resolved simply from left to
	right.  

	* eval.c (eval_sequence, eval_args_and_call_fun), parse.c
	(resolve_code_block):   eval() no longer accepts LIST_T, which
	were used before for sequences of expression, instead a sequence
	is now a tuple with first element 'do_sym'.  This is preferable,
	since now expression in the eval function are always TUPLE_T or
	simpler.  Note that the parser generates LIST_T stuff, which is
	resolved by the prules to TUPLE_T.  Repeated resolving TUPLE_T
	doesn't change anything.

	* core.c (for_fn), prelude.rha: for-loops for tuples work, example
	code:

	      t = tuple.new(3);
	      t.set(0, 5);
	      t.set(1, 3);
	      t.set(2, 17);
	      y = 0;
	      for (x in t) y += x;
	      y == 25

2007-08-22  Mikio Braun  <mikiobraun@gmail.com>

	* gtree.h: If FAST_GTREE_LIMIT is defined, the first
	FAST_GTREE_LIMIT - 1 symbols will be stored in a field, not the
	tree. While this reduces lookups to O(1), object creation becomes
	more expensive. For moderate values of FAST_GTREE_LIMIT, for
	example, 12, runtime for fib(25) decreases to 60%.

	* rha_config.pl: symbols are now generated in the order they were
	defined.
	


